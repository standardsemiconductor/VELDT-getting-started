name: Haskell CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    # run at the start of every day
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ${{ matrix.os }} 
    strategy:
      matrix:
        ghc: ['8.6.5', '8.8.4', '8.10.3']
        cabal: ['3.0.0.0', '3.2.0.0']
        os: [ubuntu-20.04]
    name: ${{ matrix.os }} GHC ${{ matrix.ghc }} Cabal ${{ matrix.cabal }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install icestorm prerequisites
      run: |
        sudo apt-get update
        sudo apt-get install build-essential clang bison flex libreadline-dev gawk tcl-dev libffi-dev git graphviz xdot pkg-config python python3 libftdi-dev qt5-default python3-dev libboost-all-dev cmake libeigen3-dev

    - name: Checkout icestorm
      uses: actions/checkout@v2
      with:
        repository: YosysHQ/icestorm
        path: icestorm

    - name: Install icestorm
      working-directory: icestorm
      run: |
        make
        sudo make install

    - name: Checkout nextpnr
      uses: actions/checkout@v2
      with:
        repository: YosysHQ/nextpnr
        path: nextpnr

    - name: Install nextpnr
      working-directory: nextpnr
      run: |
        cmake -DARCH=ice40 -DCMAKE_INSTALL_PREFIX=/usr/local .
        make
        sudo make install

    - name: Checkout yosys
      uses: actions/checkout@v2
      with:
        repository: YosysHQ/yosys
        path: yosys

    - name: Install yosys
      working-directory: yosys
      run: |
        make
        sudo make install

    - name: Setup Haskell
      uses: haskell/actions/setup@v1
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - name: Cache
      uses: actions/cache@v1
      env:
        cache-name: cache-cabal
      with:
        path: ~/.cabal
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install dependencies
      working-directory: veldt
      run: |
        cabal update
        cabal build --only-dependencies --enable-tests --enable-benchmarks
    - name: Build
      working-directory: veldt
      run: cabal build --enable-tests --enable-benchmarks all
    - name: Run tests
      working-directory: veldt
      run: cabal test all

    - name: Blinker
      working-directory: demo/blinker
      run: make

    - name: Echo
      working-directory: demo/echo
      run: make

    - name: Uart Led
      working-directory: demo/uart-led
      run: make